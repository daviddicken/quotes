/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Random;

public class App {

    public static void main(String[] args) throws Exception {
        String availableArgs = "Possible arguments first arguments are [author : contains : web ] \nIf you chose to search by author or contains you need to enter the authors name or a key word or phrase as the second argument.\nIf you search phrase or author's name has any spaces please enclose with \"\" example:'author \"Cassandra Clare\"'\nYou can also enter web as the only argument to get a random quote from the web.\nOr don't enter any arguments to grab a random quote from your pc.\n";
        String enjoy = "Please enjoy this quote for now:\n";

        if (args.length > 0) {
            if (args.length > 2) {
                System.out.println(availableArgs + enjoy);
                System.out.println(randomQ());
            }else if(args[0].toLowerCase().equals("web")){
                pingApi();
            }else if(args.length > 1) {
                switch (args[0].toLowerCase()) {
                    case "author":
                            System.out.println(authorQ(args[1]).toLowerCase());
                        break;
                    case "contains":
                            System.out.println(wordQ(args[1].toLowerCase()));
                        break;
                    default:
                        System.out.println(availableArgs + enjoy);
                        System.out.println(randomQ());
                }
            }else{
                System.out.println(availableArgs + enjoy);
                System.out.println(randomQ());
            }
        } else {
            System.out.println(randomQ());
        }
    }

 //==========================================
 public static String getRandomQuote(ArrayList<Quote> theList){
     Random rand = new Random();
     int index = rand.nextInt(theList.size());

     return theList.get(index).toString();
 }

//============================================
    public static String randomQ() throws Exception {
        return getRandomQuote(getList());
    }

//==========================================
    public static String wordQ(String searchWord) throws Exception{
        ArrayList<Quote> wisdom = getList();
        ArrayList<Quote> searched = new ArrayList<>();

        for(Quote words : wisdom){
            if(words.getQoute().toLowerCase().contains(searchWord)){
                searched.add(words);
            }
        }
        if(searched.size() > 0){
            return getRandomQuote(searched);
        }
        String returnString = String.format("We were unable to find any quotes that contained %s but check out this quote\n", searchWord);
        returnString += getRandomQuote(wisdom);

        return returnString;
    }

//===========================================
    public static String authorQ(String searchAuthor) throws Exception{
        ArrayList<Quote> wisdom = getList();
        ArrayList<Quote> searched = new ArrayList<>();

        for(Quote speaker : wisdom) {
            if (speaker.getAuthor().toLowerCase().contains(searchAuthor)) {
                searched.add(speaker);
            }
        }
        if(searched.size() > 0){
            return getRandomQuote(searched);
        }

        String returnString = String.format("We were unable to find any quotes from %s, but check out this quote:\n", searchAuthor);
        returnString += getRandomQuote(wisdom);

        return returnString;
    }

 //=========================================
  public static void pingApi() throws Exception {

     try {
          URL url = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
          HttpURLConnection connection = (HttpURLConnection) url.openConnection();
          connection.setRequestMethod("GET");
          BufferedReader potato = new BufferedReader(new InputStreamReader(connection.getInputStream()));

          String aLine = potato.readLine();

          saveQuote(aLine);
          webQuote(aLine);
     }catch (Exception e){
         System.out.println(randomQ());
     }
  }

  //========================================
    public static void saveQuote(String quoteJson) throws IOException {

        String path = "src/main/resources/recentquotes.json";
        String guts = Files.readString(Paths.get(path));

        guts = guts.substring(0, guts.length() -1);
        guts += String.format(",%s\n]", quoteJson);

       BufferedWriter writer = new BufferedWriter(new FileWriter(path));
       writer.write(guts);

        writer.close();
    }

  //=========================================
    public static void webQuote(String theQuote){
        Gson gson = new Gson();
        ApiQuote potato = gson.fromJson(theQuote, ApiQuote.class);

        System.out.println(potato);

    }

//===========================================
    public static ArrayList<Quote> getList() throws Exception {
        File file = new File("src/main/resources/recentquotes.json");
        JsonReader jsReader = new JsonReader(new FileReader(file));

        ArrayList<Quote> arrayOfQuotes = new ArrayList<>();

        //--------------------------------------
        // This block of code is thanks to Peyton who cracked the docs to figure out how to make this work
        jsReader.beginArray();       // look for beginning of array char [
        while (jsReader.hasNext()) {   // check to make sure another obj exist
            String author = null;    // reset variable to null
            String text = null;

            jsReader.beginObject();  // look for beginning of obj char {
            while (jsReader.hasNext()) { // check that another line exist in obj
                String name = jsReader.nextName(); // store next key in variable
                if (name.equals("author") || name.equals(("quoteAuthor")))// check if key matches a key we need for constructor
                    author = jsReader.nextString();// if found store value in variable
                else if (name.equals("text") || name.equals("quoteText"))
                    text = jsReader.nextString();
                else
                    jsReader.skipValue(); // if not a key we need skip
            }
            jsReader.endObject();        // look for end of obj char }
            Quote quote = new Quote(author, text); // create new quote with variables
            arrayOfQuotes.add(quote);// add quote to array
        }
        jsReader.endArray();
        jsReader.close();
        return arrayOfQuotes;
    }
}

